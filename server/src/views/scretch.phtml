<?php 
//existsTable
//createTable // ALTER TABLE // //uploadTableData
//existsTableData
//uploadTableData
$table="cities";
echo "<pre>";

/**
 * Check if the table is exists
 * if not, create that
 */

if (!checkUsersTable()) {
   echo "New";
}
echo "One";
echo "<br>Data exists ".$table."<br>";
var_dump(checkUsersData($table));

function getPostById(){

}

function editPostById(){

}

function deletePostById(){

}

function createPost(){

}

function uploadBulkData(){
    //Kitalálni hogy kellene ellenőrizni és kezelni a nagyobb adathalmazt
}

function userCount(){
    $usersAPI = json_decode(file_get_contents("https://fakestoreapi.com/users"),true);
    return count($usersAPI);
}

function checkUsersData($tableName){
    try {
        $pdo = getConnection();
        
        $sql = "SELECT COUNT(*) FROM `".$tableName."`";
        $res = $pdo->query($sql);
        $columns = $res->fetchColumn();

        $srcCount = userCount();  
        if ($srcCount === $columns) {
            return true;
        } else {
            return false;
        }
    } catch (PDOException $pdoe) {
        echo "<br>Error:<br>";
        var_dump($pdoe);
        return false; 
    }
}

function checkUsersTable(){
    try {
        $sql = "CREATE TABLE `users` (
            `id` int NOT NULL ,
            `email` varchar(255) NOT NULL,
            `username` varchar(255) NOT NULL,
            `password` varchar(255) NOT NULL,
            `firstname` varchar(255) NOT NULL,
            `lastname` varchar(255) NOT NULL,
            `city` varchar(255) NOT NULL,
            `street` varchar(255) NOT NULL,
            `number` int NOT NULL,
            `zipcode` varchar(255) NOT NULL,
            `geoLat` float NOT NULL,
            `geoLong` float NOT NULL,
            `phone` varchar(255) NOT NULL,
            `uploaded` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`id`)
        )";

        $pdo = new PDO(
            'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname='. $_SERVER['DB_NAME'], 
            $_SERVER['DB_USER'],
            $_SERVER['DB_PASSWORD']
        );

        $stmt =  $pdo->prepare($sql);
        try {
            $result = $stmt->execute();
            echo "Tábla létrehozva";
            return false;
        } catch (PDOException $e) {
            $errorCode = $e->errorInfo[0];
            if ($errorCode === '42S01') {
                echo "A tábla már létezik.";
                return true;
            } else {
                die("Hiba: " . $e->getMessage());
            }
        }
    } catch (PDOException $e) {
        return false;
    }
}

function getConnection(){
    $pdo = new PDO ( 
        'mysql:host='.$_SERVER['DB_HOST'].';dbname='.$_SERVER['DB_NAME'],
        $_SERVER['DB_USER'],
        $_SERVER['DB_PASSWORD']
    );
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    return $pdo;
}

//Just for documentation
function checkTable($tableName){
    /** Journey around creating tables
     * Original plan was: Make sure the table is already exists, 
     * if not, not problem, creat it and fill it up with the data.
     * First I tried with check the table is exists, then if not create that
     * but I rememberd IF NOT EXISTS selectorwould functionally perfect for here
     * but as resoult I couldnt check, table was exists before.
     * then I had a siply idea, so I made a normal create table and with error handling 
     * I could see, it was exists (error but not funcion not die), if wasnt exists just normally created!
     */
    $pdo = new PDO(
        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname='. $_SERVER['DB_NAME'], 
        $_SERVER['DB_USER'],
        $_SERVER['DB_PASSWORD']
    );
    
    $sql = "SELECT 1 FROM information_schema.tables 
        WHERE table_schema = database() AND table_name = ?";
    $stmt =  $pdo->prepare($sql);
    try {
        $stmt->execute([$tableName]);
        $tableEx = (bool)$stmt->fetchColumn();
        if ($tableEx) {
            return true;
        }
    } catch (PDOException $e) {
        die("<br>Tábla létezés ellenőrzés hibája: " . $e->getMessage());
    }
}
?>

